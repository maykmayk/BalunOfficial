{"ast":null,"code":"// import React from \"react\";\n// import { LineChart, useYScale } from \"@mui/x-charts\";\n\n// function Momentum(props) {\n// \tconst data = props.data?.content?.momentum?.main?.data;\n// \tconsole.log(data);\n\n// \tlet minutes = [];\n// \tlet values = [];\n\n// \tdata?.map((moment, index) => {\n// \t\tminutes.push(moment.minute);\n// \t\tvalues.push(moment.value);\n// \t});\n\n// \tfunction ColorSwitch({ threshold, color1, color2, id }) {\n// \t\tconst scale = useYScale();\n// \t\tconst off = scale(threshold);\n\n// \t\treturn (\n// \t\t<defs>\n// \t\t\t<linearGradient id={id} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n// \t\t\t<stop offset=\"0%\" stopColor={color1} stopOpacity={1} />\n// \t\t\t<stop offset={off} stopColor={color1} stopOpacity={1} />\n// \t\t\t<stop offset={off} stopColor={color2} stopOpacity={1} />\n// \t\t\t<stop offset=\"100%\" stopColor={color2} stopOpacity={1} />\n// \t\t\t</linearGradient>\n// \t\t</defs>\n// \t\t);\n// \t}\n\n// \treturn (\n// \t\t<div className=\"w-full flex flex-col rounded-lg py-4 bg-white brd gap-4\">\n// \t\t<div className=\"text-center font-medium text-base px-4\">Match Momentum</div>\n// \t\t<div className=\"brd05\"></div>\n// \t\t<div className=\"h-32 md:h-64 relative\">\n// \t\t\t<LineChart\n// \t\t\taxisHighlight={{\n// \t\t\t\tx: \"none\",\n// \t\t\t\ty: \"none\",\n// \t\t\t}}\n// \t\t\txAxis={[\n// \t\t\t\t{\n// \t\t\t\tdata: minutes,\n// \t\t\t\tmin: minutes[0],\n// \t\t\t\tmax: minutes[minutes.length - 1],\n// \t\t\t\thideTooltip: true,\n// \t\t\t\t},\n// \t\t\t]}\n// \t\t\tseries={[\n// \t\t\t\t{\n// \t\t\t\tdata: values,\n// \t\t\t\tarea: true,\n// \t\t\t\tstack: \"total\",\n// \t\t\t\tshowMark: false,\n// \t\t\t\t},\n// \t\t\t]}\n// \t\t\tleftAxis={null}\n// \t\t\tbottomAxis={null}\n// \t\t\tmargin={{\n// \t\t\t\tleft: 30,\n// \t\t\t\tright: 30,\n// \t\t\t\ttop: 20,\n// \t\t\t\tbottom: 20,\n// \t\t\t}}\n// \t\t\tsx={{\n// \t\t\t\t\"& .MUIAreaElement-root\": {\n// \t\t\t\tfill: \"url(#swhich-color-id)\",\n// \t\t\t\t},\n// \t\t\t}}\n// \t\t\t>\n// \t\t\t<ColorSwitch color1={props.colorData?.home} color2={props.colorData?.away} threshold={0} id=\"swhich-color-id\" />\n// \t\t\t</LineChart>\n// \t\t\t<div className=\"absolute w-full bottom-3 md:bottom-6 pt-4 flex justify-center h-full\">\n// \t\t\t<div className=\"border border-dashed border-gray-200 relative h-full\" />\n// \t\t\t</div>\n// \t\t\t<div className=\"absolute w-full bottom-3 md:bottom-6 px-4\">\n// \t\t\t<div className=\"border border-dashed border-gray-200 relative w-full\">\n// \t\t\t\t<div className=\"w-full right-0 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-base flex justify-between\">\n// \t\t\t\t<div className=\"w-fit px-2 py-0.5 bg-white rounded-full font-bold font-sm md:font-base\">0'</div>\n// \t\t\t\t<div className=\"w-fit px-2 py-0.5 bg-white rounded-full font-bold font-sm md:font-base\">HT</div>\n// \t\t\t\t<div className=\"w-fit px-2 py-0.5 bg-white rounded-full font-bold font-sm md:font-base\">FT</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t);\n// }\n\n// export default Momentum;\n// import React, { PureComponent } from 'react';\n// import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\n// export default class Momentum extends PureComponent {\n// \tstatic demoUrl = 'https://codesandbox.io/s/area-chart-filled-by-sign-0h7rt';\n\n// \trender() {\n// \t\tconst data = this.props.data?.content?.momentum?.main?.data;\n// \t\tconsole.log(data);\n\n// \t\tlet minutes = [];\n// \t\tlet values = [];\n\n// \t\tdata?.map((moment, index) => {\n// \t\t\tminutes.push(moment.minute);\n// \t\t\tvalues.push(moment.value);\n// \t\t});\n\n// \t\tconst gradientOffset = () => {\n// \t\t\tconst dataMax = Math.max(...values);\n// \t\t\tconst dataMin = Math.min(...values);\n\n// \t\t\tif (dataMax <= 0) {\n// \t\t\t\treturn 0;\n// \t\t\t}\n// \t\t\tif (dataMin >= 0) {\n// \t\t\t\treturn 1;\n// \t\t\t}\n\n// \t\t\treturn dataMax / (dataMax - dataMin);\n// \t\t};\n\n// \t\tconst off = gradientOffset();\n\n// \t\treturn (\n// \t\t\t<AreaChart\n// \t\t\t\twidth={1000}\n// \t\t\t\theight={400}\n// \t\t\t\tdata={values}\n// \t\t\t\tmargin={{\n// \t\t\t\t\ttop: 10,\n// \t\t\t\t\tright: 20,\n// \t\t\t\t\tleft: 20,\n// \t\t\t\t\tbottom: 10,\n// \t\t\t\t}}\n// \t\t\t\t>\n// \t\t\t\t{/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n// \t\t\t\t{/* <XAxis dataKey=\"name\" /> */}\n// \t\t\t\t<YAxis />\n// \t\t\t\t<Tooltip />\n// \t\t\t\t<defs>\n// \t\t\t\t\t<linearGradient id=\"splitColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n// \t\t\t\t\t<stop offset={off} stopColor=\"green\" stopOpacity={1} />\n// \t\t\t\t\t<stop offset={off} stopColor=\"red\" stopOpacity={1} />\n// \t\t\t\t\t</linearGradient>\n// \t\t\t\t</defs>\n// \t\t\t\t<Area type=\"monotone\" dataKey=\"uv\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n// \t\t\t</AreaChart>\n// \t\t);\n// \t}\n// }","map":{"version":3,"names":[],"sources":["/Users/lebon/Desktop/el_balon/src/components/matches/Momentum.jsx"],"sourcesContent":["// import React from \"react\";\n// import { LineChart, useYScale } from \"@mui/x-charts\";\n\n// function Momentum(props) {\n// \tconst data = props.data?.content?.momentum?.main?.data;\n// \tconsole.log(data);\n\n// \tlet minutes = [];\n// \tlet values = [];\n\n// \tdata?.map((moment, index) => {\n// \t\tminutes.push(moment.minute);\n// \t\tvalues.push(moment.value);\n// \t});\n\n// \tfunction ColorSwitch({ threshold, color1, color2, id }) {\n// \t\tconst scale = useYScale();\n// \t\tconst off = scale(threshold);\n\n// \t\treturn (\n// \t\t<defs>\n// \t\t\t<linearGradient id={id} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n// \t\t\t<stop offset=\"0%\" stopColor={color1} stopOpacity={1} />\n// \t\t\t<stop offset={off} stopColor={color1} stopOpacity={1} />\n// \t\t\t<stop offset={off} stopColor={color2} stopOpacity={1} />\n// \t\t\t<stop offset=\"100%\" stopColor={color2} stopOpacity={1} />\n// \t\t\t</linearGradient>\n// \t\t</defs>\n// \t\t);\n// \t}\n\n// \treturn (\n// \t\t<div className=\"w-full flex flex-col rounded-lg py-4 bg-white brd gap-4\">\n// \t\t<div className=\"text-center font-medium text-base px-4\">Match Momentum</div>\n// \t\t<div className=\"brd05\"></div>\n// \t\t<div className=\"h-32 md:h-64 relative\">\n// \t\t\t<LineChart\n// \t\t\taxisHighlight={{\n// \t\t\t\tx: \"none\",\n// \t\t\t\ty: \"none\",\n// \t\t\t}}\n// \t\t\txAxis={[\n// \t\t\t\t{\n// \t\t\t\tdata: minutes,\n// \t\t\t\tmin: minutes[0],\n// \t\t\t\tmax: minutes[minutes.length - 1],\n// \t\t\t\thideTooltip: true,\n// \t\t\t\t},\n// \t\t\t]}\n// \t\t\tseries={[\n// \t\t\t\t{\n// \t\t\t\tdata: values,\n// \t\t\t\tarea: true,\n// \t\t\t\tstack: \"total\",\n// \t\t\t\tshowMark: false,\n// \t\t\t\t},\n// \t\t\t]}\n// \t\t\tleftAxis={null}\n// \t\t\tbottomAxis={null}\n// \t\t\tmargin={{\n// \t\t\t\tleft: 30,\n// \t\t\t\tright: 30,\n// \t\t\t\ttop: 20,\n// \t\t\t\tbottom: 20,\n// \t\t\t}}\n// \t\t\tsx={{\n// \t\t\t\t\"& .MUIAreaElement-root\": {\n// \t\t\t\tfill: \"url(#swhich-color-id)\",\n// \t\t\t\t},\n// \t\t\t}}\n// \t\t\t>\n// \t\t\t<ColorSwitch color1={props.colorData?.home} color2={props.colorData?.away} threshold={0} id=\"swhich-color-id\" />\n// \t\t\t</LineChart>\n// \t\t\t<div className=\"absolute w-full bottom-3 md:bottom-6 pt-4 flex justify-center h-full\">\n// \t\t\t<div className=\"border border-dashed border-gray-200 relative h-full\" />\n// \t\t\t</div>\n// \t\t\t<div className=\"absolute w-full bottom-3 md:bottom-6 px-4\">\n// \t\t\t<div className=\"border border-dashed border-gray-200 relative w-full\">\n// \t\t\t\t<div className=\"w-full right-0 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-base flex justify-between\">\n// \t\t\t\t<div className=\"w-fit px-2 py-0.5 bg-white rounded-full font-bold font-sm md:font-base\">0'</div>\n// \t\t\t\t<div className=\"w-fit px-2 py-0.5 bg-white rounded-full font-bold font-sm md:font-base\">HT</div>\n// \t\t\t\t<div className=\"w-fit px-2 py-0.5 bg-white rounded-full font-bold font-sm md:font-base\">FT</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t);\n// }\n\n// export default Momentum;\n// import React, { PureComponent } from 'react';\n// import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\n// export default class Momentum extends PureComponent {\n// \tstatic demoUrl = 'https://codesandbox.io/s/area-chart-filled-by-sign-0h7rt';\n\n// \trender() {\n// \t\tconst data = this.props.data?.content?.momentum?.main?.data;\n// \t\tconsole.log(data);\n\n// \t\tlet minutes = [];\n// \t\tlet values = [];\n\n// \t\tdata?.map((moment, index) => {\n// \t\t\tminutes.push(moment.minute);\n// \t\t\tvalues.push(moment.value);\n// \t\t});\n\n// \t\tconst gradientOffset = () => {\n// \t\t\tconst dataMax = Math.max(...values);\n// \t\t\tconst dataMin = Math.min(...values);\n\n// \t\t\tif (dataMax <= 0) {\n// \t\t\t\treturn 0;\n// \t\t\t}\n// \t\t\tif (dataMin >= 0) {\n// \t\t\t\treturn 1;\n// \t\t\t}\n\n// \t\t\treturn dataMax / (dataMax - dataMin);\n// \t\t};\n\n// \t\tconst off = gradientOffset();\n\n// \t\treturn (\n// \t\t\t<AreaChart\n// \t\t\t\twidth={1000}\n// \t\t\t\theight={400}\n// \t\t\t\tdata={values}\n// \t\t\t\tmargin={{\n// \t\t\t\t\ttop: 10,\n// \t\t\t\t\tright: 20,\n// \t\t\t\t\tleft: 20,\n// \t\t\t\t\tbottom: 10,\n// \t\t\t\t}}\n// \t\t\t\t>\n// \t\t\t\t{/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n// \t\t\t\t{/* <XAxis dataKey=\"name\" /> */}\n// \t\t\t\t<YAxis />\n// \t\t\t\t<Tooltip />\n// \t\t\t\t<defs>\n// \t\t\t\t\t<linearGradient id=\"splitColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n// \t\t\t\t\t<stop offset={off} stopColor=\"green\" stopOpacity={1} />\n// \t\t\t\t\t<stop offset={off} stopColor=\"red\" stopOpacity={1} />\n// \t\t\t\t\t</linearGradient>\n// \t\t\t\t</defs>\n// \t\t\t\t<Area type=\"monotone\" dataKey=\"uv\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n// \t\t\t</AreaChart>\n// \t\t);\n// \t}\n// }"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}