{"ast":null,"code":"import axios from 'axios';\nclass ApiManager {\n  constructor() {\n    this.apiKey = process.env.REACT_APP_API_KEY;\n    this.baseHost = process.env.REACT_APP_BASE_URL;\n  }\n  async makeRequest(endpoint, method = 'GET', params = {}) {\n    const axiosOptions = {\n      method: method,\n      url: `${this.baseHost}/v3/${endpoint}`,\n      // Fix the URL construction\n      headers: {\n        'x-rapidapi-key': this.apiKey,\n        'x-rapidapi-host': this.baseHost\n      },\n      params: params,\n      redirect: 'follow'\n    };\n    try {\n      const response = await axios(axiosOptions);\n      return response.data;\n    } catch (error) {\n      console.log('Error:', error);\n      throw error;\n    }\n  }\n  async getLeagues() {\n    try {\n      console.log(this.makeRequest());\n      return await this.makeRequest('leagues');\n    } catch (error) {\n      console.log('Error fetching leagues:', error);\n      throw error;\n    }\n  }\n}\nexport default ApiManager;","map":{"version":3,"names":["axios","ApiManager","constructor","apiKey","process","env","REACT_APP_API_KEY","baseHost","REACT_APP_BASE_URL","makeRequest","endpoint","method","params","axiosOptions","url","headers","redirect","response","data","error","console","log","getLeagues"],"sources":["/Users/lebon/Desktop/el_balon/src/api/ApiManager.js"],"sourcesContent":["import axios from 'axios';\n\nclass ApiManager {\n    apiKey = process.env.REACT_APP_API_KEY;\n    baseHost = process.env.REACT_APP_BASE_URL;\n\n    async makeRequest(endpoint, method = 'GET', params = {}) {\n        const axiosOptions = {\n            method: method,\n            url: `${this.baseHost}/v3/${endpoint}`,  // Fix the URL construction\n            headers: {\n                'x-rapidapi-key': this.apiKey,\n                'x-rapidapi-host': this.baseHost,\n            },\n            params: params,\n            redirect: 'follow',\n        };\n    \n        try {\n            const response = await axios(axiosOptions);\n            return response.data;\n        } catch (error) {\n            console.log('Error:', error);\n            throw error;\n        }\n    }\n\n    async getLeagues() {\n        try {\n            console.log(this.makeRequest())\n            return await this.makeRequest('leagues');\n        } catch (error) {\n            console.log('Error fetching leagues:', error);\n            throw error;\n        }\n    }\n}\n\nexport default ApiManager;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,CAAC;EAAAC,YAAA;IAAA,KACbC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;IAAA,KACtCC,QAAQ,GAAGH,OAAO,CAACC,GAAG,CAACG,kBAAkB;EAAA;EAEzC,MAAMC,WAAWA,CAACC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;IACrD,MAAMC,YAAY,GAAG;MACjBF,MAAM,EAAEA,MAAM;MACdG,GAAG,EAAG,GAAE,IAAI,CAACP,QAAS,OAAMG,QAAS,EAAC;MAAG;MACzCK,OAAO,EAAE;QACL,gBAAgB,EAAE,IAAI,CAACZ,MAAM;QAC7B,iBAAiB,EAAE,IAAI,CAACI;MAC5B,CAAC;MACDK,MAAM,EAAEA,MAAM;MACdI,QAAQ,EAAE;IACd,CAAC;IAED,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACa,YAAY,CAAC;MAC1C,OAAOI,QAAQ,CAACC,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;MAC5B,MAAMA,KAAK;IACf;EACJ;EAEA,MAAMG,UAAUA,CAAA,EAAG;IACf,IAAI;MACAF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,WAAW,CAAC,CAAC,CAAC;MAC/B,OAAO,MAAM,IAAI,CAACA,WAAW,CAAC,SAAS,CAAC;IAC5C,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACf;EACJ;AACJ;AAEA,eAAelB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}