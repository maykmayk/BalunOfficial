{"ast":null,"code":"var _jsxFileName = \"/Users/lebon/Desktop/el_balon/src/components/matches/MatchLive.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ProvaApi from \"../../api/ProvaApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MatchLive(props) {\n  _s();\n  var _liveData$events;\n  const data = props.data;\n  const apiProva = new ProvaApi();\n  const [liveData, setLiveData] = useState([]);\n  useEffect(() => {\n    const fetchLive = async () => {\n      try {\n        const timestamp = new Date().getTime();\n        const responseLiveData = await apiProva.makeRequest(`api/ltc?ltcUrl=data.fotmob.com%2Fwebcl%2Fltc%2Fgsm%2F4169732_en_gen.json.gz&teams=%5B%22Iraq%22%2C%22Japan%22%5D&_=${timestamp}`);\n        setLiveData(responseLiveData.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchLive();\n  }, [props]);\n  console.log(liveData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-4 rounded-lg brd bg-white flex flex-col gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-base font-medium text-center px-4\",\n      children: \"Live Ticker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brd05\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), liveData === null || liveData === void 0 ? void 0 : (_liveData$events = liveData.events) === null || _liveData$events === void 0 ? void 0 : _liveData$events.map((event, index) => {\n      var _event$time;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4\",\n          children: event !== null && event !== void 0 && event.onlyText ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-bold\",\n              children: event === null || event === void 0 ? void 0 : (_event$time = event.time) === null || _event$time === void 0 ? void 0 : _event$time.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: event === null || event === void 0 ? void 0 : event.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this) : null\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brd05\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchLive, \"i5uD/xoJxHs3pFsh8ZUf/peMTdQ=\");\n_c = MatchLive;\nexport default MatchLive;\nvar _c;\n$RefreshReg$(_c, \"MatchLive\");","map":{"version":3,"names":["useEffect","useState","ProvaApi","jsxDEV","_jsxDEV","Fragment","_Fragment","MatchLive","props","_s","_liveData$events","data","apiProva","liveData","setLiveData","fetchLive","timestamp","Date","getTime","responseLiveData","makeRequest","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","events","map","event","index","_event$time","onlyText","time","main","text","_c","$RefreshReg$"],"sources":["/Users/lebon/Desktop/el_balon/src/components/matches/MatchLive.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport ProvaApi from \"../../api/ProvaApi\";\n\nfunction MatchLive(props) {\n  const data = props.data;\n  const apiProva = new ProvaApi();\n  const [liveData, setLiveData] = useState([]);\n\n  useEffect(() => {\n    const fetchLive = async () => {\n      try {\n        const timestamp = new Date().getTime();\n        const responseLiveData = await apiProva.makeRequest(`api/ltc?ltcUrl=data.fotmob.com%2Fwebcl%2Fltc%2Fgsm%2F4169732_en_gen.json.gz&teams=%5B%22Iraq%22%2C%22Japan%22%5D&_=${timestamp}`);\n        setLiveData(responseLiveData.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchLive();\n\n  }, [props]);\n\n  console.log(liveData);\n\n  return (\n    <div className=\"py-4 rounded-lg brd bg-white flex flex-col gap-3\">\n      <div className=\"text-base font-medium text-center px-4\">Live Ticker</div>\n      <div className=\"brd05\"></div>\n      {liveData?.events?.map((event, index) => (\n        <>\n        <div className=\"px-4\" key={index}>\n          {event?.onlyText ? (\n            <div className=\"flex flex-col gap-3\">\n              <div className=\"text-sm font-bold\">{event?.time?.main}</div>\n              <div className=\"text-sm\">{event?.text}</div>\n            </div>\n          ) : null}\n        </div>\n        <div className=\"brd05\"></div>\n        </>\n      ))}\n      <div className=\"px-4\"></div>\n    </div>\n  );\n}\n\nexport default MatchLive;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}