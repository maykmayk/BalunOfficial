{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport got from \"got\";\nimport { CastingError } from './type-cast-error';\nimport { Convert as ConvertLeague } from './types/league';\nimport { Convert as ConvertMatchDetails } from './types/match-details';\nimport { Convert as ConvertMatches } from './types/matches';\nimport { Convert as ConvertPlayer } from './types/player';\nimport { Convert as ConvertTeam } from \"./types/team\";\nimport { Convert as ConvertWorldNews } from './types/world-news';\nconst baseUrl = \"https://www.fotmob.com/api/\";\nexport default class Fotmob {\n  constructor() {\n    this.map = new Map();\n    this.matchesUrl = `${baseUrl}matches?`;\n    this.leaguesUrl = `${baseUrl}leagues?`;\n    this.teamsUrl = `${baseUrl}teams?`;\n    this.playerUrl = `${baseUrl}playerData?`;\n    this.matchDetailsUrl = `${baseUrl}matchDetails?`;\n    this.searchUrl = `${baseUrl}searchapi/`;\n    this.worldNewsUrl = `${baseUrl}worldnews?`;\n  }\n  checkDate(date) {\n    const re = /(20\\d{2})(\\d{2})(\\d{2})/;\n    return re.exec(date);\n  }\n  safeTypeCastFetch(url, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const res = yield got.get(url, {\n        cache: this.map\n      });\n      const json = JSON.parse(res.body);\n      if (json === null || json === void 0 ? void 0 : json.error) {\n        throw new Error(json);\n      }\n      try {\n        return fn(res.body);\n      } catch (err) {\n        if (err instanceof CastingError) {\n          return JSON.parse(res.body);\n        }\n        throw err;\n      }\n    });\n  }\n  getMatchesByDate(date) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.checkDate(date) != null) {\n        const url = this.matchesUrl + `date=${date}`;\n        return yield this.safeTypeCastFetch(url, ConvertMatches.toMatches);\n      }\n    });\n  }\n  getLeague(id, tab = \"overview\", type = \"league\", timeZone = \"America/New_York\") {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = this.leaguesUrl + `id=${id}&tab=${tab}&type=${type}&timeZone=${timeZone}`;\n      return yield this.safeTypeCastFetch(url, ConvertLeague.toLeague);\n    });\n  }\n  getTeam(id, tab = \"overview\", type = \"team\", timeZone = \"America/New_York\") {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = this.teamsUrl + `id=${id}&tab=${tab}&type=${type}&timeZone=${timeZone}`;\n      return yield this.safeTypeCastFetch(url, ConvertTeam.toTeam);\n    });\n  }\n  getPlayer(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = this.playerUrl + `id=${id}`;\n      return yield this.safeTypeCastFetch(url, ConvertPlayer.toPlayer);\n    });\n  }\n  getMatchDetails(matchId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = this.matchDetailsUrl + `matchId=${matchId}`;\n      return yield this.safeTypeCastFetch(url, ConvertMatchDetails.toMatchDetails);\n    });\n  }\n  getWorldNews({\n    page = 1,\n    lang = \"en\"\n  } = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = this.worldNewsUrl + `page=${page}&lang=${lang}`;\n      return yield this.safeTypeCastFetch(url, ConvertWorldNews.toWorldNews);\n    });\n  }\n  request(path, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const url = `${baseUrl + path}?${new URLSearchParams(params)}`;\n      return yield this.safeTypeCastFetch(url, data => JSON.parse(data));\n    });\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","got","CastingError","Convert","ConvertLeague","ConvertMatchDetails","ConvertMatches","ConvertPlayer","ConvertTeam","ConvertWorldNews","baseUrl","Fotmob","constructor","map","Map","matchesUrl","leaguesUrl","teamsUrl","playerUrl","matchDetailsUrl","searchUrl","worldNewsUrl","checkDate","date","re","exec","safeTypeCastFetch","url","fn","res","get","cache","json","JSON","parse","body","error","Error","err","getMatchesByDate","toMatches","getLeague","id","tab","type","timeZone","toLeague","getTeam","toTeam","getPlayer","toPlayer","getMatchDetails","matchId","toMatchDetails","getWorldNews","page","lang","toWorldNews","request","path","params","URLSearchParams","data"],"sources":["/Users/lebon/Desktop/el_balon/node_modules/fotmob/dist/esm/fotmob.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport got from \"got\";\nimport { CastingError } from './type-cast-error';\nimport { Convert as ConvertLeague } from './types/league';\nimport { Convert as ConvertMatchDetails } from './types/match-details';\nimport { Convert as ConvertMatches } from './types/matches';\nimport { Convert as ConvertPlayer } from './types/player';\nimport { Convert as ConvertTeam } from \"./types/team\";\nimport { Convert as ConvertWorldNews } from './types/world-news';\nconst baseUrl = \"https://www.fotmob.com/api/\";\nexport default class Fotmob {\n    constructor() {\n        this.map = new Map();\n        this.matchesUrl = `${baseUrl}matches?`;\n        this.leaguesUrl = `${baseUrl}leagues?`;\n        this.teamsUrl = `${baseUrl}teams?`;\n        this.playerUrl = `${baseUrl}playerData?`;\n        this.matchDetailsUrl = `${baseUrl}matchDetails?`;\n        this.searchUrl = `${baseUrl}searchapi/`;\n        this.worldNewsUrl = `${baseUrl}worldnews?`;\n    }\n    checkDate(date) {\n        const re = /(20\\d{2})(\\d{2})(\\d{2})/;\n        return re.exec(date);\n    }\n    safeTypeCastFetch(url, fn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield got.get(url, { cache: this.map });\n            const json = JSON.parse(res.body);\n            if (json === null || json === void 0 ? void 0 : json.error) {\n                throw new Error(json);\n            }\n            try {\n                return fn(res.body);\n            }\n            catch (err) {\n                if (err instanceof CastingError) {\n                    return JSON.parse(res.body);\n                }\n                throw err;\n            }\n        });\n    }\n    getMatchesByDate(date) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.checkDate(date) != null) {\n                const url = this.matchesUrl + `date=${date}`;\n                return yield this.safeTypeCastFetch(url, ConvertMatches.toMatches);\n            }\n        });\n    }\n    getLeague(id, tab = \"overview\", type = \"league\", timeZone = \"America/New_York\") {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.leaguesUrl + `id=${id}&tab=${tab}&type=${type}&timeZone=${timeZone}`;\n            return yield this.safeTypeCastFetch(url, ConvertLeague.toLeague);\n        });\n    }\n    getTeam(id, tab = \"overview\", type = \"team\", timeZone = \"America/New_York\") {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.teamsUrl + `id=${id}&tab=${tab}&type=${type}&timeZone=${timeZone}`;\n            return yield this.safeTypeCastFetch(url, ConvertTeam.toTeam);\n        });\n    }\n    getPlayer(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.playerUrl + `id=${id}`;\n            return yield this.safeTypeCastFetch(url, ConvertPlayer.toPlayer);\n        });\n    }\n    getMatchDetails(matchId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.matchDetailsUrl + `matchId=${matchId}`;\n            return yield this.safeTypeCastFetch(url, ConvertMatchDetails.toMatchDetails);\n        });\n    }\n    getWorldNews({ page = 1, lang = \"en\" } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.worldNewsUrl + `page=${page}&lang=${lang}`;\n            return yield this.safeTypeCastFetch(url, ConvertWorldNews.toWorldNews);\n        });\n    }\n    request(path, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `${baseUrl + path}?${new URLSearchParams(params)}`;\n            return yield this.safeTypeCastFetch(url, (data) => JSON.parse(data));\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}