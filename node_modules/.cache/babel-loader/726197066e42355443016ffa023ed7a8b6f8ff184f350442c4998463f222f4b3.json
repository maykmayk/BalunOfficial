{"ast":null,"code":"import axios from 'axios';\nclass ApiManager {\n  constructor() {\n    this.apiKey = 'XxXxXxXxXxXxXxXxXxXxXxXx';\n    // Replace with your actual API key\n    this.baseHost = 'v3.football.api-sports.io';\n  }\n  async makeRequest(endpoint, method = 'GET', params = {}) {\n    const axiosOptions = {\n      method: method,\n      url: `https://${this.baseHost}/${endpoint}`,\n      headers: {\n        'x-rapidapi-key': this.apiKey,\n        'x-rapidapi-host': this.baseHost\n      },\n      params: params,\n      redirect: 'follow'\n    };\n    try {\n      const response = await axios(axiosOptions);\n      return response.data;\n    } catch (error) {\n      console.log('Error:', error);\n      throw error;\n    }\n  }\n\n  // Example method to get leagues\n  async getLeagues() {\n    try {\n      return await this.makeRequest('leagues');\n    } catch (error) {\n      console.log('Error fetching leagues:', error);\n      throw error;\n    }\n  }\n\n  // Add more methods for other endpoints as needed\n}\nexport default ApiManager;","map":{"version":3,"names":["axios","ApiManager","constructor","apiKey","baseHost","makeRequest","endpoint","method","params","axiosOptions","url","headers","redirect","response","data","error","console","log","getLeagues"],"sources":["/Users/lebon/Desktop/el_balon/src/api/ApiManager.js"],"sourcesContent":["import axios from 'axios';\n\nclass ApiManager {\n  apiKey = 'XxXxXxXxXxXxXxXxXxXxXxXx'; // Replace with your actual API key\n  baseHost = 'v3.football.api-sports.io';\n\n  async makeRequest(endpoint, method = 'GET', params = {}) {\n    const axiosOptions = {\n      method: method,\n      url: `https://${this.baseHost}/${endpoint}`,\n      headers: {\n        'x-rapidapi-key': this.apiKey,\n        'x-rapidapi-host': this.baseHost,\n      },\n      params: params,\n      redirect: 'follow',\n    };\n\n    try {\n      const response = await axios(axiosOptions);\n      return response.data;\n    } catch (error) {\n      console.log('Error:', error);\n      throw error;\n    }\n  }\n\n  // Example method to get leagues\n  async getLeagues() {\n    try {\n      return await this.makeRequest('leagues');\n    } catch (error) {\n      console.log('Error fetching leagues:', error);\n      throw error;\n    }\n  }\n\n  // Add more methods for other endpoints as needed\n}\n\nexport default ApiManager;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,CAAC;EAAAC,YAAA;IAAA,KACfC,MAAM,GAAG,0BAA0B;IAAE;IAAA,KACrCC,QAAQ,GAAG,2BAA2B;EAAA;EAEtC,MAAMC,WAAWA,CAACC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;IACvD,MAAMC,YAAY,GAAG;MACnBF,MAAM,EAAEA,MAAM;MACdG,GAAG,EAAG,WAAU,IAAI,CAACN,QAAS,IAAGE,QAAS,EAAC;MAC3CK,OAAO,EAAE;QACP,gBAAgB,EAAE,IAAI,CAACR,MAAM;QAC7B,iBAAiB,EAAE,IAAI,CAACC;MAC1B,CAAC;MACDI,MAAM,EAAEA,MAAM;MACdI,QAAQ,EAAE;IACZ,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACS,YAAY,CAAC;MAC1C,OAAOI,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;MAC5B,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMG,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,OAAO,MAAM,IAAI,CAACb,WAAW,CAAC,SAAS,CAAC;IAC1C,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;;EAEA;AACF;AAEA,eAAed,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}