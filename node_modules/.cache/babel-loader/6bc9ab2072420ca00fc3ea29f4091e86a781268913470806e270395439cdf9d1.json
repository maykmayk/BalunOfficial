{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport useIsomorphicLayoutEffect from '../hooks/useIsomorphicLayoutEffect';\nimport useChartContext from '../utils/chartContext';\nvar getElBox = function getElBox(el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    top: Math.round(rect.top),\n    right: Math.round(rect.right),\n    bottom: Math.round(rect.bottom),\n    left: Math.round(rect.left),\n    width: Math.round(rect.width),\n    height: Math.round(rect.height),\n    x: Math.round(rect.x),\n    y: Math.round(rect.y)\n  };\n};\nexport default function useMeasure(_ref) {\n  var axis = _ref.axis,\n    elRef = _ref.elRef,\n    gridDimensions = _ref.gridDimensions,\n    setShowRotated = _ref.setShowRotated;\n  var _useChartContext = useChartContext(),\n    axisDimensionsState = _useChartContext.axisDimensionsState;\n  var axisDimensions = axisDimensionsState[0],\n    setAxisDimensions = axisDimensionsState[1];\n  var axisDimension = React.useMemo(function () {\n    var _axisDimensions;\n    return (_axisDimensions = axisDimensions[axis.position]) == null ? void 0 : _axisDimensions[axis.id];\n  }, [axisDimensions, axis.position, axis.id]); // const isLooping = useIsLooping()\n\n  var measureRotation = React.useCallback(function () {\n    var _widestLabel2;\n    if (!elRef.current) {\n      return;\n    }\n    var gridSize = !axis.isVertical ? gridDimensions.width : gridDimensions.height;\n    var staticLabelDims = Array.from(elRef.current.querySelectorAll('.Axis-Group.outer .tickLabel')).map(function (el) {\n      return getElBox(el);\n    }); // Determine the largest labels on the axis\n\n    var widestLabel;\n    staticLabelDims.forEach(function (label) {\n      var _widestLabel;\n      var resolvedLabel = (_widestLabel = widestLabel) != null ? _widestLabel : {\n        width: 0\n      };\n      if (label.width > 0 && label.width > resolvedLabel.width) {\n        widestLabel = label;\n      }\n    });\n    var smallestTickGap = gridSize;\n    if (staticLabelDims.length > 1) {\n      staticLabelDims.forEach(function (current, i) {\n        var prev = staticLabelDims[i - 1];\n        if (prev) {\n          smallestTickGap = Math.min(smallestTickGap, axis.isVertical ? current.top - prev.top : current.left - prev.left);\n        }\n      });\n    }\n    var shouldRotate = (((_widestLabel2 = widestLabel) == null ? void 0 : _widestLabel2.width) || 0) + axis.minTickPaddingForRotation > smallestTickGap; // if (!isLooping) {\n    // Rotate ticks for non-time horizontal axes\n\n    if (!axis.isVertical) {\n      setShowRotated(shouldRotate);\n    } // }\n  }, [elRef, axis.isVertical, axis.minTickPaddingForRotation, gridDimensions.width, gridDimensions.height, setShowRotated]);\n  var measureDimensions = React.useCallback(function () {\n    if (!elRef.current) {\n      if (axisDimension) {\n        // If the entire axis is hidden, then we need to remove the axis dimensions\n        setAxisDimensions(function (old) {\n          var _old$axis$position, _extends2;\n          var newAxes = _extends({}, (_old$axis$position = old[axis.position]) != null ? _old$axis$position : {});\n          delete newAxes[axis.id];\n          return _extends({}, old, (_extends2 = {}, _extends2[axis.position] = newAxes, _extends2));\n        });\n      }\n      return;\n    }\n    var newDimensions = {\n      width: 0,\n      height: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0\n    };\n    var currentEl = elRef.current;\n    var axisEl = currentEl.querySelector(\".Axis-Group.inner .domainAndTicks\");\n    var domainEl = currentEl.querySelector(\".Axis-Group.inner .domain\");\n    if (!axisEl || !domainEl) {\n      return;\n    }\n    var axisDims = getElBox(axisEl);\n    var domainDims = getElBox(domainEl);\n    if (!axisDims || !domainDims) {\n      return;\n    } // Axis overflow measurements\n\n    if (!axis.isVertical) {\n      newDimensions.paddingLeft = Math.round(Math.max(0, domainDims.left - (axisDims == null ? void 0 : axisDims.left)));\n      newDimensions.paddingRight = Math.round(Math.max(0, (axisDims == null ? void 0 : axisDims.right) - domainDims.right));\n      newDimensions.height = axisDims == null ? void 0 : axisDims.height;\n    } else {\n      newDimensions.paddingTop = Math.round(Math.max(0, domainDims.top - (axisDims == null ? void 0 : axisDims.top)));\n      newDimensions.paddingBottom = Math.round(Math.max(0, (axisDims == null ? void 0 : axisDims.bottom) - domainDims.bottom));\n      newDimensions.width = axisDims == null ? void 0 : axisDims.width;\n    } // Only update the axisDimensions if something has changed\n\n    if (\n    // !isLooping &&\n    !axisDimensions || !axisDimension || Object.keys(newDimensions).some(function (key) {\n      // @ts-ignore\n      return newDimensions[key] !== axisDimension[key];\n    })) {\n      setAxisDimensions(function (old) {\n        var _old$axis$position2, _extends3, _extends4;\n        return _extends({}, old, (_extends4 = {}, _extends4[axis.position] = _extends({}, (_old$axis$position2 = old[axis.position]) != null ? _old$axis$position2 : {}, (_extends3 = {}, _extends3[axis.id] = newDimensions, _extends3)), _extends4));\n      });\n    }\n  }, [axis.id, axis.isVertical, axis.position, axisDimension, axisDimensions, elRef, setAxisDimensions]); // Measure after if needed\n\n  useIsomorphicLayoutEffect(function () {\n    // setTimeout(() => {\n    window.requestAnimationFrame(function () {\n      measureRotation();\n      measureDimensions();\n    });\n  }, [measureRotation]); // useIsomorphicLayoutEffect(() => {\n  //   // setTimeout(() => {\n  //   window.requestAnimationFrame(() => {\n  //   })\n  // }, [measureRotation])\n}","map":{"version":3,"names":["_extends","React","useIsomorphicLayoutEffect","useChartContext","getElBox","el","rect","getBoundingClientRect","top","Math","round","right","bottom","left","width","height","x","y","useMeasure","_ref","axis","elRef","gridDimensions","setShowRotated","_useChartContext","axisDimensionsState","axisDimensions","setAxisDimensions","axisDimension","useMemo","_axisDimensions","position","id","measureRotation","useCallback","_widestLabel2","current","gridSize","isVertical","staticLabelDims","Array","from","querySelectorAll","map","widestLabel","forEach","label","_widestLabel","resolvedLabel","smallestTickGap","length","i","prev","min","shouldRotate","minTickPaddingForRotation","measureDimensions","old","_old$axis$position","_extends2","newAxes","newDimensions","paddingTop","paddingBottom","paddingLeft","paddingRight","currentEl","axisEl","querySelector","domainEl","axisDims","domainDims","max","Object","keys","some","key","_old$axis$position2","_extends3","_extends4","window","requestAnimationFrame"],"sources":["/Users/lebon/Desktop/el_balon/node_modules/react-charts/es/components/AxisLinear.useMeasure.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport useIsomorphicLayoutEffect from '../hooks/useIsomorphicLayoutEffect';\nimport useChartContext from '../utils/chartContext';\n\nvar getElBox = function getElBox(el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    top: Math.round(rect.top),\n    right: Math.round(rect.right),\n    bottom: Math.round(rect.bottom),\n    left: Math.round(rect.left),\n    width: Math.round(rect.width),\n    height: Math.round(rect.height),\n    x: Math.round(rect.x),\n    y: Math.round(rect.y)\n  };\n};\n\nexport default function useMeasure(_ref) {\n  var axis = _ref.axis,\n      elRef = _ref.elRef,\n      gridDimensions = _ref.gridDimensions,\n      setShowRotated = _ref.setShowRotated;\n\n  var _useChartContext = useChartContext(),\n      axisDimensionsState = _useChartContext.axisDimensionsState;\n\n  var axisDimensions = axisDimensionsState[0],\n      setAxisDimensions = axisDimensionsState[1];\n  var axisDimension = React.useMemo(function () {\n    var _axisDimensions;\n\n    return (_axisDimensions = axisDimensions[axis.position]) == null ? void 0 : _axisDimensions[axis.id];\n  }, [axisDimensions, axis.position, axis.id]); // const isLooping = useIsLooping()\n\n  var measureRotation = React.useCallback(function () {\n    var _widestLabel2;\n\n    if (!elRef.current) {\n      return;\n    }\n\n    var gridSize = !axis.isVertical ? gridDimensions.width : gridDimensions.height;\n    var staticLabelDims = Array.from(elRef.current.querySelectorAll('.Axis-Group.outer .tickLabel')).map(function (el) {\n      return getElBox(el);\n    }); // Determine the largest labels on the axis\n\n    var widestLabel;\n    staticLabelDims.forEach(function (label) {\n      var _widestLabel;\n\n      var resolvedLabel = (_widestLabel = widestLabel) != null ? _widestLabel : {\n        width: 0\n      };\n\n      if (label.width > 0 && label.width > resolvedLabel.width) {\n        widestLabel = label;\n      }\n    });\n    var smallestTickGap = gridSize;\n\n    if (staticLabelDims.length > 1) {\n      staticLabelDims.forEach(function (current, i) {\n        var prev = staticLabelDims[i - 1];\n\n        if (prev) {\n          smallestTickGap = Math.min(smallestTickGap, axis.isVertical ? current.top - prev.top : current.left - prev.left);\n        }\n      });\n    }\n\n    var shouldRotate = (((_widestLabel2 = widestLabel) == null ? void 0 : _widestLabel2.width) || 0) + axis.minTickPaddingForRotation > smallestTickGap; // if (!isLooping) {\n    // Rotate ticks for non-time horizontal axes\n\n    if (!axis.isVertical) {\n      setShowRotated(shouldRotate);\n    } // }\n\n  }, [elRef, axis.isVertical, axis.minTickPaddingForRotation, gridDimensions.width, gridDimensions.height, setShowRotated]);\n  var measureDimensions = React.useCallback(function () {\n    if (!elRef.current) {\n      if (axisDimension) {\n        // If the entire axis is hidden, then we need to remove the axis dimensions\n        setAxisDimensions(function (old) {\n          var _old$axis$position, _extends2;\n\n          var newAxes = _extends({}, (_old$axis$position = old[axis.position]) != null ? _old$axis$position : {});\n\n          delete newAxes[axis.id];\n          return _extends({}, old, (_extends2 = {}, _extends2[axis.position] = newAxes, _extends2));\n        });\n      }\n\n      return;\n    }\n\n    var newDimensions = {\n      width: 0,\n      height: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0\n    };\n    var currentEl = elRef.current;\n    var axisEl = currentEl.querySelector(\".Axis-Group.inner .domainAndTicks\");\n    var domainEl = currentEl.querySelector(\".Axis-Group.inner .domain\");\n\n    if (!axisEl || !domainEl) {\n      return;\n    }\n\n    var axisDims = getElBox(axisEl);\n    var domainDims = getElBox(domainEl);\n\n    if (!axisDims || !domainDims) {\n      return;\n    } // Axis overflow measurements\n\n\n    if (!axis.isVertical) {\n      newDimensions.paddingLeft = Math.round(Math.max(0, domainDims.left - (axisDims == null ? void 0 : axisDims.left)));\n      newDimensions.paddingRight = Math.round(Math.max(0, (axisDims == null ? void 0 : axisDims.right) - domainDims.right));\n      newDimensions.height = axisDims == null ? void 0 : axisDims.height;\n    } else {\n      newDimensions.paddingTop = Math.round(Math.max(0, domainDims.top - (axisDims == null ? void 0 : axisDims.top)));\n      newDimensions.paddingBottom = Math.round(Math.max(0, (axisDims == null ? void 0 : axisDims.bottom) - domainDims.bottom));\n      newDimensions.width = axisDims == null ? void 0 : axisDims.width;\n    } // Only update the axisDimensions if something has changed\n\n\n    if ( // !isLooping &&\n    !axisDimensions || !axisDimension || Object.keys(newDimensions).some(function (key) {\n      // @ts-ignore\n      return newDimensions[key] !== axisDimension[key];\n    })) {\n      setAxisDimensions(function (old) {\n        var _old$axis$position2, _extends3, _extends4;\n\n        return _extends({}, old, (_extends4 = {}, _extends4[axis.position] = _extends({}, (_old$axis$position2 = old[axis.position]) != null ? _old$axis$position2 : {}, (_extends3 = {}, _extends3[axis.id] = newDimensions, _extends3)), _extends4));\n      });\n    }\n  }, [axis.id, axis.isVertical, axis.position, axisDimension, axisDimensions, elRef, setAxisDimensions]); // Measure after if needed\n\n  useIsomorphicLayoutEffect(function () {\n    // setTimeout(() => {\n    window.requestAnimationFrame(function () {\n      measureRotation();\n      measureDimensions();\n    });\n  }, [measureRotation]); // useIsomorphicLayoutEffect(() => {\n  //   // setTimeout(() => {\n  //   window.requestAnimationFrame(() => {\n  //   })\n  // }, [measureRotation])\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}